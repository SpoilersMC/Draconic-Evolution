buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}

plugins {
    id 'java-library'
    id 'eclipse'
}

apply plugin: 'java'
apply plugin: 'forge'

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "com.brandon3055.draconicevolution"
archivesBaseName = "Draconic-Evolution"

sourceCompatibility = targetCompatibility = '1.8'

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = "run"
}
repositories {
    maven {
        name 'Overmind forge repo mirror'
        url 'https://gregtech.overminddl1.com/'
        mavenContent {
            excludeGroup("net.minecraftforge") // missing the `universal` artefact
        }
    }
    maven {
        name = "GTNH Maven"
        url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        allowInsecureProtocol = true
    }
    maven {
        name "CurseMaven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
            name "MMD Maven"
            url "https://maven.mcmoddev.com/"
    }
    maven {
        name 'CB Maven FS'
        url "https://chickenbones.net/maven/"
    }
    maven {
        name = "ic2"
        url = "https://maven.ic2.player.to/"
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    maven {
        name = "ic2-mirror"
        url = "https://maven2.ic2.player.to/"
        metadataSources {
            mavenPom()
            artifact()
        }
    }
}

dependencies {
    api("com.github.GTNewHorizons:BrandonsCore:1.0.0.13-GTNH:dev")
    api("curse.maven:cofh-lib-220333:2388748")

    compileOnly("com.github.GTNewHorizons:ForestryMC:4.6.7:api")
    compileOnly("com.github.GTNewHorizons:OpenComputers:1.9.5-GTNH:api")
    compileOnly("com.github.GTNewHorizons:NotEnoughItems:2.3.53-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:CodeChickenLib:1.1.8:dev")
    compileOnly("com.github.GTNewHorizons:inventory-tweaks:1.5.16:dev")

    compileOnly("thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev")
    compileOnly("curse.maven:computercraft-67504:2269339")
    
    //compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    //compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:dev"
    //compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"

    //if (file('../BrandonsCore/').exists()) compile project('../BrandonsCore')
}

processResources {
    duplicatesStrategy = 'include'
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that is not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}